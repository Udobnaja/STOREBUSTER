
mixin reviews(list)
    - var i = 0
    each item in list
        - var className = (i == 0) ? 'row reviews__container reviews__container--first' : 'row reviews__container'
        div(class= className)
            - var classNameImg = !(i % 2) ? 'reviews__img--even' : 'reviews__img--odd'
            div(class= classNameImg).col-xs-30.col-msm-20.reviews__img
                img(src='images/1316879278_080928apple.jpg' alt='').img.img--response
                - i++
            .reviews__txt-container.col-msm-80
                each paragraph in item[0]
                    p.paragraph.reviews__paragraph= paragraph

+reviews([
    [
        ['Фрагмент SVG-документа состоит из неограниченного количества SVG-элементов, находящихся внутри элемента. Организация внутри этого документа является ключевой. Содержимое внутри документа может быстро расширяться, а правильная организация способствует доступности и эффективности во всех отношениях, от чего выигрывают как автор, так и пользователи.',
        'Фрагмент SVG-документа состоит из неограниченного количества SVG-элементов, находящихся внутри элемента. Организация внутри этого документа является ключевой. Содержимое внутри документа может быстро расширяться, а правильная организация способствует доступности и эффективности во всех отношениях, от чего выигрывают как автор, так и пользователи.',
        'Фрагмент SVG-документа состоит из неограниченного количества SVG-элементов, находящихся внутри элемента. Организация внутри этого документа является ключевой. Содержимое внутри документа может быстро расширяться, а правильная организация способствует доступности и эффективности во всех отношениях, от чего выигрывают как автор, так и пользователи.']
    ],
    [
        ['Если вы лучше воспринимаете видео, можете посмотреть мое выступление по мотивам этой статьи на Web Standards Days в на Yandex Events (Декабрь 2013)']
    ],
    [
        ['Исключительно важно не только прочитать это руководство, но и запустить ваш любимый']
    ],
    [
        ['Этот пример просто читает содержимое файла и выводит его в виде обычного текста в консоль. Обработчик события onload  вызывается, когда файл успешно прочитан в то время, как OnError вызывается, если файл не был прочитан по каким-то причинам. Объект типа FileReader доступен внутри обработчика события через event.target. В случае успеха чтения данных, в поле result, будет содержимое файла, иначе информацию об ошибках.']
    ]
])
